name: Deploy to AWS Lambda

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Setup AWS SAM
      uses: aws-actions/setup-sam@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: SAM build
      run: sam build
    
    - name: Create S3 bucket if not exists
      run: |
        aws s3api head-bucket --bucket wssp-deployment-artifacts 2>/dev/null || \
        aws s3 mb s3://wssp-deployment-artifacts --region us-east-1

    - name: Check and delete failed stack
      run: |
        STACK_STATUS=$(aws cloudformation describe-stacks --stack-name wssp-expense-tracker --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo "NONE")
        if [ "$STACK_STATUS" = "ROLLBACK_COMPLETE" ] || [ "$STACK_STATUS" = "CREATE_FAILED" ] || [ "$STACK_STATUS" = "UPDATE_ROLLBACK_COMPLETE" ]; then
          echo "Stack is in failed state ($STACK_STATUS), deleting..."
          aws cloudformation delete-stack --stack-name wssp-expense-tracker
          aws cloudformation wait stack-delete-complete --stack-name wssp-expense-tracker
          echo "Stack deleted successfully"
        else
          echo "Stack status: $STACK_STATUS"
        fi

    - name: SAM deploy
      run: |
        sam deploy --no-confirm-changeset --no-fail-on-empty-changeset \
          --parameter-overrides \
          MetaVerifyToken=${{ secrets.META_VERIFY_TOKEN }} \
          MetaAppSecret=${{ secrets.META_APP_SECRET }} \
          MetaAccessToken=${{ secrets.META_ACCESS_TOKEN }} \
          MetaPhoneNumberId=${{ secrets.META_PHONE_NUMBER_ID }} \
          DatabasePassword=${{ secrets.DATABASE_PASSWORD }}
